[tool.poetry]
name = "fastapi-arch-tmpl"
version = "0.0.1"
description = "fastapi-arch-tmpl"
authors = ["pog7x <poluningm@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.12"
asyncpg = "^0.29.0"
aiohttp = "^3.9.5"
aio-pika = "^9.4.2"
SQLAlchemy = "^2.0.31"
fastapi = "^0.111.1"
uvicorn = "^0.30.1"
pydantic-settings = "^2.3.4"
pydantic = "^2.8.2"
alembic = "^1.13.2"
httpx = "^0.27.0"
sqlmodel = "^0.0.21"

[tool.poetry.dev-dependencies]
pytest = "^8.3.2"
pytest-cov = "5.0.0"
black = "^24.4.2"
isort = "^5.12.0"
autoflake = "^1.3.1"
flake8 = "^5.0.4"
sqlalchemy-stubs = "^0.4"
pytest-asyncio = "^0.23.7"
factory-boy = "^3.2.1"
Faker = "^26.0.0"
asgi-lifespan = "^2.1.0"
mypy = "^1.10"
polyfactory = "^2.16.2"
respx = "^0.21.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
required_plugins = [
    "pytest-asyncio",
    "pytest-cov",
]
addopts = "--cov=app --cov-report term-missing -v"
testpaths = ["tests"]
markers = ["fast: run tests without extra dependencies"]
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning"]
asyncio_mode = "auto"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip = ["venv", "migrations"]

[tool.black]
line-length = 88
target-version = ["py312"]
preview = true
exclude = '''
/(
  | venv
  | migrations
)/
'''

[tool.autoflake]
recursive = true
in-place = true
remove-all-unused-imports = true
remove-unused-variables = true
exclude = ["venv", "migrations"]
